package nl.uva.species.genetic.test;

import nl.uva.species.genetic.GeneticModelCreator;
import nl.uva.species.model.EnvModel;
import nl.uva.species.model.River;
import nl.uva.species.model.RiverState;
import nl.uva.species.utils.Utilities;

import org.rlcommunity.rlglue.codec.taskspec.TaskSpec;
import org.rlcommunity.rlglue.codec.types.Action;
import org.rlcommunity.rlglue.codec.types.Observation;

public class GeneticModelCreatorTest {

	public static void main(final String[] args) {
		testGeneratedModel();
	}

	/**
	 * Test the generated model against a true model
	 */
	public static void testGeneratedModel() {
		River testRiver = createRiver();
		Observation startObservation = new Observation();
		startObservation.intArray = new int[] { 1, 1, 3, 3, 1, 2, 1, 3, 1, 2, 3, 1, 2, 3, 1, 2, 1, 3, 3, 2, 1, 3, 3, 1,
				1, 3, 1, 3 };

		EnvModel trueModel = new EnvModel(testRiver);

		RiverState oldState = new RiverState(testRiver, startObservation);

		Action lastAction = genereateActions(startObservation);
		RiverState newState = trueModel.getPossibleNextState(oldState, lastAction);

		GeneticModelCreator gModel = new GeneticModelCreator(testRiver);

		int simulationSteps = 100;
		gModel.addRiverState(oldState);
		gModel.addRiverState(newState);
		gModel.addAction(lastAction);

		for (int i = 0; i < simulationSteps; ++i) {
			lastAction = genereateActions(newState.getObservation());
			newState = trueModel.getPossibleNextState(newState, lastAction);

			gModel.addRiverState(newState);
			gModel.addAction(lastAction);
		}

		EnvModel generatedModel = gModel.getBestModel(testRiver);

		System.out.println("Distance true <-> generated is: " + generatedModel.compareTo(trueModel));
	}

	/**
	 * Generate an action based on heuristics
	 * 
	 * @param observation
	 *            The observed state
	 * @return The appropriate action for this observation
	 */
	private static Action genereateActions(final Observation observation) {

		int[] theState = new int[7];
		Action returnAction = new Action();

		for (int i = 0; i < 7; ++i) {
			theState[i] = Utilities.ACTION_NOTHING;

			// make nothing with 30%
			if (Utilities.RNG.nextDouble() > 0.7)
				continue;

			int tam = 0;
			int empty = 0;

			for (int j = 0; j < 4; ++j) {
				if (observation.intArray[i * 4 + j] == Utilities.HABITAT_INVADED) {
					++tam;
				}
				if (observation.intArray[i * 4 + j] == Utilities.HABITAT_EMPTY) {
					++empty;
				}
			}
			if (tam > 2) {
				theState[i] = Utilities.ACTION_ERADICATE_RESTORE;
			} else if (empty >= 1) {
				theState[i] = Utilities.ACTION_RESTORE;
			}
		}

		returnAction.intArray = theState;

		return returnAction;
	}

	/**
	 * Create the default river from the Website
	 * 
	 * @return The default test river
	 */
	public static River createRiver() {
		return new River(
				new TaskSpec(
						"VERSION RL-Glue-3.0 PROBLEMTYPE non-episodic DISCOUNTFACTOR 0.9 OBSERVATIONS INTS (28 1 3) ACTIONS INTS (7 1 4) REWARDS (-10000 -16.1) EXTRA [(0, 7), (1, 4), (2, 6), (3, 6), (4, 0), (5, 4), (6, 0)] BUDGET 100 by Majid Taleghan."));
	}

	/**
	 * Testrun 1 generated with the rl_glue and python environment
	 */
	public void test1() {
		River river = new River(
				new TaskSpec(
						"VERSION RL-Glue-3.0 PROBLEMTYPE non-episodic DISCOUNTFACTOR 0.9 OBSERVATIONS INTS (28 1 3) ACTIONS INTS (7 1 4) REWARDS (-10000 -16.1) EXTRA [(0, 7), (1, 4), (2, 6), (3, 6), (4, 0), (5, 4), (6, 0)] BUDGET 100 by Majid Taleghan."));
		GeneticModelCreator g = new GeneticModelCreator(river);

		Observation o;
		Action a;

		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
	}

	/**
	 * Testrun 2 generated with the rl_glue and python environment
	 */
	public static void test2() {
		River river = new River(
				new TaskSpec(
						"VERSION RL-Glue-3.0 PROBLEMTYPE non-episodic DISCOUNTFACTOR 0.9 OBSERVATIONS INTS (28 1 3) ACTIONS INTS (7 1 4) REWARDS (-10000 -16.1) EXTRA [(0, 7), (1, 4), (2, 6), (3, 6), (4, 0), (5, 4), (6, 0)] BUDGET 100 by Majid Taleghan."));
		GeneticModelCreator g = new GeneticModelCreator(river);

		Observation o;
		Action a;

		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// // g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// // g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// // g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// // g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		// // g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);
		o = new Observation();
		o.intArray = new int[] { 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2 };
		g.addRiverState(new RiverState(river, o));
		g.getBestModel(river);
		a = new Action();
		a.intArray = new int[] { 1, 1, 1, 1, 1, 1, 1 };
		g.addAction(a);

	}
}
